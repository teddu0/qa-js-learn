/*
    Классические функции, которые были изучены ранее называются функциями первого класса
*/

/**
 * Обычная функция первого класса, которая возвращает результат сложения переданных агрументов
 * @param {*} a
 * @param {*} b
 * @returns
 */
function plus(a, b) {
  return a + b;
}
/**
 * Следующая функция первого класса, которая возвращает результат вычитания переданных агрументов
 * @param {*} a
 * @param {*} b
 * @returns
 */
function distract(a, b) {
  return a - b;
}

/**
 * Данная функция является фунцией высшего порядка, которая принимает помимо классических аргументов еще и функцию
 * Фунция принимает какую-то функцию и возвращает ее
 * То есть функциями высшего порядка являются функции, которы принимают аргументами другие функции или возвращают функцию
 * Данная функция еще назыается callback функцией
 * @param {*} a
 * @param {*} b
 * @param {*} fn
 * @returns
 */
function calculate(a, b, fn) {
  console.log(fn.name); // здесь обращамся к атрибуту функции name - то есть выводим в консоль название переданной функции
  return fn(a, b);
}

const plusResult = calculate(2, 4, plus);
console.log(plusResult); // здесь callback функция выводит результат функции plus()
const distractResult = calculate(2, 4, distract);
console.log(distractResult); // здесь callback функция выводит результат функции distract()
